<UserControl x:Class="RadarGame.UI.Views.ProtocolsControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:RadarGame.UI.Views"
             xmlns:controls="clr-namespace:RadarGame.UI.Controls"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:models="clr-namespace:RadarGame.UI.Models"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <Border>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="70"></RowDefinition>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <!--<CheckBox Grid.Row="1"
                      x:Name="ProtocolSliderBox"
                      IsChecked="{Binding IsSliderOpen}"
                      IsEnabled="{Binding IsEnableToChangeService}"
                      Style="{StaticResource ProtocolsCheckBoxStyle}"></CheckBox>-->
            <!--<controls:ProtocolSelectionControl Grid.Row="1"
                                               Width="50"
                                               Height="162"
                                               VerticalAlignment="Top"
                                               HorizontalAlignment="Left"
                                               SoftEtherCommand="{Binding ChangeProtocolCommand}"
                                               OpenVPNCommand="{Binding ChangeProtocolCommand}"
                                               PPTPCommand="{Binding ChangeProtocolCommand}"
                                               IsEnabled="{Binding ElementName=ProtocolSliderBox, Path=IsChecked}"
                                               Style="{StaticResource LeftSlidingControlStyle}"
                                               Grid.RowSpan="10"></controls:ProtocolSelectionControl>
            <Path Grid.Row="1"
                  VerticalAlignment="Center"
                  HorizontalAlignment="Center"
                  Fill="White"
                  Stretch="Uniform"
                  Height="30"
                  Width="30"
                  Data="{Binding ProtocolType, Converter={StaticResource ProtocolTypeToIconConverter}}"></Path>-->
            <!--<CheckBox IsEnabled="{Binding IsEnableToChangeService , Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      Grid.Row="5"
                      VerticalAlignment="Center"
                      HorizontalAlignment="Center"
                      Margin="0,0,0,0"
                      IsHitTestVisible="{Binding CanChangeServiceType}"
                      IsChecked="{Binding IsOpenVpn, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      Style="{StaticResource RadarProtocolCheckBoxStyle}"></CheckBox>-->
            <CheckBox 
                Grid.Row="5"
                Margin="-3,0,0,0"
                VerticalAlignment="Center"
                HorizontalAlignment="Left"
                Style="{StaticResource RadarDnsCheckBoxStyle}"
                IsChecked="{Binding IsDnsSet, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"></CheckBox>
            <ComboBox Grid.Row="5"
                      Style="{StaticResource RightSideComboBoxStyle}"
                      VerticalAlignment="Center"
                      HorizontalAlignment="Right"
                      IsEnabled="{Binding IsEnableToChangeService}"
                      ItemsSource="{Binding ServerLocations}"
                      SelectedValue="{Binding SelectedLocation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      Margin="0,0,-3,0"
                      >
            </ComboBox>
            <controls:PowerButton VerticalAlignment="Center"
                                  HorizontalAlignment="Center"
                                  Grid.Row="2"
                                  Margin="0,30,0,0"
                                  Command="{Binding ConfigureDnsCommand}"
                                  Style="{StaticResource RadarPowerButtonStyle}"
                                  IsGettingData="{Binding IsGettingData}"
                                  IsTurnedOn="{Binding IsTurnedOn, Mode=TwoWay}">
            </controls:PowerButton>
            
            <TextBlock Margin="0,10,0,15"
                       x:Name="TextBlockService"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Top"
                       Grid.Row="3"
                       FontSize="22"
                       FontWeight="SemiBold"
                       Text="{Binding ServiceText}">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Foreground" Value="{StaticResource RadarRedColorBrush}"></Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsGettingData}" Value="True">
                                <Setter Property="Foreground" Value="{StaticResource RadarOrangeColorBrush}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsTurnedOn}" Value="True">
                                <Setter Property="Foreground" Value="{StaticResource RadarCyanColorBrush}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
                <TextBlock.Effect>
                    <DropShadowEffect BlurRadius="20"
                                      ShadowDepth="0"
                                      Opacity="0.5"
                                      Color="{Binding ElementName=TextBlockService, Path=Foreground.(SolidColorBrush.Color)}"/>
                </TextBlock.Effect>
            </TextBlock>
        </Grid>
    </Border>
</UserControl>
